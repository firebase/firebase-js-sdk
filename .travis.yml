language: node_js
node_js:
  - 8
cache: yarn

# Define global C++ compiler version
env:
  global:
    - CXX=g++-4.8
before_install:
  # Yarn defaults to an old version, make sure we get an up to date version
  - npm install -g yarn@1.15.2
  - '[ "${NPM_TOKEN+x}" ] && echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > $HOME/.npmrc || echo "Skipping .npmrc creation";'
install:
  # --frozen-lockfile doesnâ€™t generate a yarn.lock lockfile and should fail if an update is needed.
  # This will make sure that yarn.lock file in the PR is consistent with package.json.
  #
  # Due to a yarn issue (https://github.com/yarnpkg/yarn/issues/5840), --frozen-lockfile doesn't
  # actually fail if an update is required, but integrity check from tools/pretest.js will catch
  # the issue, so it still works as expected.
  - yarn install --frozen-lockfile
before_script:
  - cp config/ci.config.json config/project.json
  - yarn build

# Misc Addons/Configs
dist: trusty
sudo: required
addons:
  apt:
    sources:
      - google-chrome
      - ubuntu-toolchain-r-test
    packages:
      - google-chrome-stable
      - g++-4.8

matrix:
  fast_finish: true

jobs:
  allow_failures:
    - script: yarn test:saucelabs
    - script: yarn test:saucelabs --database-firestore-only
  include:
    - name: Node.js and Browser (Chrome) Test
      stage: test
      script: xvfb-run yarn test
      after_success: yarn test:coverage
    - name: Cross Browser Test for SDKs except Database and Firestore
      stage: test
      script: yarn test:saucelabs
      if: type = push
    - name: Cross Browser Test for Database and Firestore SDK
      stage: test
      script: yarn test:saucelabs --database-firestore-only
      if: type = push
    - stage: deploy
      script: skip
      # NPM Canary Build Config
      deploy:
        skip_cleanup: true
        provider: script
        script: yarn release --canary
      if: type = push AND repo = firebase/firebase-js-sdk AND branch = master
