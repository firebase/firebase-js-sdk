name: Test All Packages

on:
  push:
    branches: ['**']

env:
  artifactRetentionDays: 14

jobs:
  build:
    name: Build the SDK
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt update
    - run: sudo apt install wget
    - name: google-chrome install
      if: false
      id: chrome_install
      run: |
        set -xv # echo command as they are executed
        download_dir="$(mktemp -d --tmpdir=${{ runner.temp }})"

        wget \
          --no-verbose \
          https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
          --output-document \
          "$download_dir/google-chrome-stable_current_amd64.deb"

        sudo dpkg -i "$download_dir/google-chrome-stable_current_amd64.deb"
        sudo apt-get install -f

        echo "Installed $(google-chrome --version)" >> "$GITHUB_STEP_SUMMARY"
        chrome_version=$(google-chrome --version | awk '{ print $3 }')
        echo "chrome_version=$chrome_version" >> "$GITHUB_OUTPUT"
    - name: chromedriver install
      run: |
        set -xv # echo command as they are executed
        chrome_version=$(google-chrome --version | awk '{ print $3 }')
        download_dir="$(mktemp -d --tmpdir=${{ runner.temp }})"

        wget \
          --no-verbose \
          "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$chrome_version/linux64/chromedriver-linux64.zip" \
          --output-document \
          "$download_dir/chromedriver-linux64.zip"

        mkdir "$download_dir/unzipped"
        unzip "$download_dir/chromedriver-linux64.zip" -d "$download_dir/unzipped"
        chromedriver_exe="$download_dir/unzipped/chromedriver-linux64/chromedriver"
        ls -l "$chromedriver_exe"

        # Tell the `chromedriver` npm package which binary to use.
        # See https://www.npmjs.com/package/chromedriver
        echo "CHROMEDRIVER_FILEPATH=$chromedriver_exe" >> "$GITHUB_ENV"

    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Bump Node memory limit
      run: echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV
    - run: yarn
    - run: yarn build
    - if: ${{ !cancelled() }}
      run: tar zcf ${{ runner.temp }}/build.tar.gz --exclude=.git --exclude=node_modules .
    - if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v3
      with:
          name: build.tar.gz
          path: ${{ runner.temp }}/build.tar.gz
          retention-days: ${{ env.artifactRetentionDays }}
        
  # Auth and Firestore are built and executed in their own jobs in an attempt to reduce flakiness.
  test-the-rest:
    name: (bulk) Node.js and Browser (Chrome) Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    # install Chrome first, so the correct version of webdriver can be installed by chromedriver when setting up the repo
    - name: install Chrome stable
      run: |
        sudo apt-get update
        sudo apt-get install google-chrome-stable
    - name: Download build archive
      uses: actions/download-artifact@v3
      with:
        name: build.tar.gz
    - name: Unzip build artifact
      run: tar xf build.tar.gz
    - name: Set up Node (16)
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Bump Node memory limit
      run: echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV
    - name: Test setup and yarn install
      run: |
        cp config/ci.config.json config/project.json
        yarn
    - name: Set start timestamp env var
      run: echo "FIREBASE_CI_TEST_START_TIME=$(date +%s)" >> $GITHUB_ENV
    - name: Run unit tests
      # Ignore auth and firestore since they're handled in their own separate jobs.
      run: |
        xvfb-run yarn lerna run --ignore '{firebase-messaging-integration-test,@firebase/auth*,@firebase/firestore*,firebase-firestore-integration-test}' --concurrency 4 test:ci
        node scripts/print_test_logs.js
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
    - name: Generate coverage file
      run: yarn ci:coverage
    - name: Run coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./lcov-all.info
      continue-on-error: true

  test-auth:
    name: (Auth) Node.js and Browser (Chrome) Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    # install Chrome so the correct version of webdriver can be installed by chromedriver when setting up the repo
    - name: install Chrome stable
      # Install Chrome version 110.0.5481.177-1 as some Auth tests start to fail on version 111.
      # Temporary: Auth team will explore what's going wrong with the auth tests.
      run: |
        sudo apt-get update
        sudo apt-get install wget
        sudo wget http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_110.0.5481.177-1_amd64.deb
        sudo apt-get install -f ./google-chrome-stable_110.0.5481.177-1_amd64.deb --allow-downgrades
    - name: Download build archive
      uses: actions/download-artifact@v3
      with:
        name: build.tar.gz
    - name: Unzip build artifact
      run: tar xf build.tar.gz
    - name: Set up Node (16)
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Bump Node memory limit
      run: echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV
    - name: Test setup and yarn install
      run: |
        cp config/ci.config.json config/project.json
        yarn
    - name: Set start timestamp env var
      run: echo "FIREBASE_CI_TEST_START_TIME=$(date +%s)" >> $GITHUB_ENV
    - name: Run unit tests
      run: |
        xvfb-run yarn lerna run --concurrency 4 test:ci --scope '@firebase/auth*'
        node scripts/print_test_logs.js
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
    - name: Generate coverage file
      run: yarn ci:coverage
    - name: Run coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./lcov-all.info
      continue-on-error: true

  test-firestore:
    name: (Firestore) Node.js and Browser (Chrome) Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    # install Chrome so the correct version of webdriver can be installed by chromedriver when setting up the repo
    - name: install Chrome stable
      run: |
        sudo apt-get update
        sudo apt-get install google-chrome-stable
    - name: Download build archive
      uses: actions/download-artifact@v3
      with:
        name: build.tar.gz
    - name: Unzip build artifact
      run: tar xf build.tar.gz
    - name: Set up Node (16)
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Bump Node memory limit
      run: echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV
    - name: Test setup and yarn install
      run: |
        cp config/ci.config.json config/project.json
        yarn
    - name: Set start timestamp env var
      run: echo "FIREBASE_CI_TEST_START_TIME=$(date +%s)" >> $GITHUB_ENV
    - name: Run unit tests
      run: |
        xvfb-run yarn lerna run --concurrency 4 test:ci --scope '@firebase/firestore*'
        node scripts/print_test_logs.js
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
    - name: Generate coverage file
      run: yarn ci:coverage
    - name: Run coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./lcov-all.info
      continue-on-error: true

  test-firestore-integration:
    name: Firestore Integration Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    # install Chrome so the correct version of webdriver can be installed by chromedriver when setting up the repo
    - name: install Chrome stable
      run: |
        sudo apt-get update
        sudo apt-get install google-chrome-stable
    - name: Download build archive
      uses: actions/download-artifact@v3
      with:
        name: build.tar.gz
    - name: Unzip build artifact
      run: tar xf build.tar.gz
    - name: Set up Node (16)
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Bump Node memory limit
      run: echo "NODE_OPTIONS=--max_old_space_size=4096" >> $GITHUB_ENV
    - name: Test setup and yarn install
      run: |
        cp config/ci.config.json config/project.json
        yarn
    - name: Set start timestamp env var
      run: echo "FIREBASE_CI_TEST_START_TIME=$(date +%s)" >> $GITHUB_ENV
    - name: Run unit tests
      run: |
        xvfb-run yarn lerna run --concurrency 4 test:ci --scope firebase-firestore-integration-test
        node scripts/print_test_logs.js
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
