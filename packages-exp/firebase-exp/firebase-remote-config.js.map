{"version":3,"file":"firebase-remote-config.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/util/src/errors.ts","../../packages/logger/src/logger.ts","../../packages/component/src/component.ts","../../node_modules/idb/lib/idb.mjs","../installations-exp/src/util/constants.ts","../installations-exp/src/util/errors.ts","../installations-exp/src/functions/common.ts","../installations-exp/src/util/sleep.ts","../installations-exp/src/helpers/generate-fid.ts","../installations-exp/src/helpers/buffer-to-base64-url-safe.ts","../installations-exp/src/util/get-key.ts","../installations-exp/src/helpers/fid-changed.ts","../installations-exp/src/helpers/idb-manager.ts","../installations-exp/src/helpers/get-installation-entry.ts","../installations-exp/src/functions/create-installation-request.ts","../installations-exp/src/functions/generate-auth-token-request.ts","../installations-exp/src/helpers/refresh-auth-token.ts","../installations-exp/src/api/get-token.ts","../installations-exp/src/helpers/extract-app-config.ts","../installations-exp/src/functions/config.ts","../installations-exp/src/api/get-id.ts","../installations-exp/src/index.ts","../remote-config-exp/src/client/remote_config_fetch_client.ts","../remote-config-exp/src/constants.ts","../remote-config-exp/src/errors.ts","../remote-config-exp/src/value.ts","../remote-config-exp/src/api.ts","../remote-config-exp/src/client/caching_client.ts","../remote-config-exp/src/client/rest_client.ts","../remote-config-exp/src/language.ts","../remote-config-exp/src/client/retrying_client.ts","../../packages/util/src/exponential_backoff.ts","../remote-config-exp/src/remote_config.ts","../remote-config-exp/src/storage/storage.ts","../remote-config-exp/src/storage/storage_cache.ts","../remote-config-exp/src/register.ts","../remote-config-exp/src/api2.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.complete;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.complete;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\nimport { FirebaseInstallations } from '@firebase/installations-types-exp';\n\n/**\n * Returns an Installation auth token, identifying the current Firebase Installation.\n *\n * @public\n */\nexport async function getToken(\n  installations: FirebaseInstallations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types-exp';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app-exp';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-types-exp';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations-exp';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-exp-internal';\n\nconst publicFactory: InstanceFactory<'installations-exp'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app-exp').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const platformLoggerProvider = _getProvider(app, 'platform-logger');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    platformLoggerProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-exp-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app-exp').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { FirebaseInstallations } from '@firebase/installations-types-exp';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n *\n * @public\n */\nexport async function getId(\n  installations: FirebaseInstallations\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app-exp';\nimport { name, version } from '../package.json';\n\nexport * from './api';\n\nregisterInstallations();\nregisterVersion(name, version);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines a client, as in https://en.wikipedia.org/wiki/Client%E2%80%93server_model, for the\n * Remote Config server (https://firebase.google.com/docs/reference/remote-config/rest).\n *\n * <p>Abstracts throttle, response cache and network implementation details.\n *\n * <p>Modeled after the native {@link GlobalFetch} interface, which is relatively modern and\n * convenient, but simplified for Remote Config's use case.\n *\n * Disambiguation: {@link GlobalFetch} interface and the Remote Config service define \"fetch\"\n * methods. The RestClient uses the former to make HTTP calls. This interface abstracts the latter.\n */\nexport interface RemoteConfigFetchClient {\n  /**\n   * @throws if response status is not 200 or 304.\n   */\n  fetch(request: FetchRequest): Promise<FetchResponse>;\n}\n\n/**\n * Defines a self-descriptive reference for config key-value pairs.\n */\nexport interface FirebaseRemoteConfigObject {\n  [key: string]: string;\n}\n\n/**\n * Shims a minimal AbortSignal.\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class RemoteConfigAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n/**\n * Defines per-request inputs for the Remote Config fetch request.\n *\n * <p>Modeled after the native {@link Request} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchRequest {\n  /**\n   * Uses cached config if it is younger than this age.\n   *\n   * <p>Required because it's defined by settings, which always have a value.\n   *\n   * <p>Comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the native\n   * Fetch API.\n   */\n  cacheMaxAgeMillis: number;\n\n  /**\n   * An event bus for the signal to abort a request.\n   *\n   * <p>Required because all requests should be abortable.\n   *\n   * <p>Comparable to the native\n   * Fetch API's \"signal\" field on its request configuration object\n   * https://fetch.spec.whatwg.org/#dom-requestinit-signal.\n   *\n   * <p>Disambiguation: Remote Config commonly refers to API inputs as\n   * \"signals\". See the private ConfigFetchRequestBody interface for those:\n   * http://google3/firebase/remote_config/web/src/core/rest_client.ts?l=14&rcl=255515243.\n   */\n  signal: RemoteConfigAbortSignal;\n\n  /**\n   * The ETag header value from the last response.\n   *\n   * <p>Optional in case this is the first request.\n   *\n   * <p>Comparable to passing `headers = { 'If-None-Match': <eTag> }` to the native Fetch API.\n   */\n  eTag?: string;\n}\n\n/**\n * Defines a successful response (200 or 304).\n *\n * <p>Modeled after the native {@link Response} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchResponse {\n  /**\n   * The HTTP status, which is useful for differentiating success responses with data from\n   * those without.\n   *\n   * <p>{@link RemoteConfigClient} is modeled after the native {@link GlobalFetch} interface, so\n   * HTTP status is first-class.\n   *\n   * <p>Disambiguation: the fetch response returns a legacy \"state\" value that is redundant with the\n   * HTTP status code. The former is normalized into the latter.\n   */\n  status: number;\n\n  /**\n   * Defines the ETag response header value.\n   *\n   * <p>Only defined for 200 and 304 responses.\n   */\n  eTag?: string;\n\n  /**\n   * Defines the map of parameters returned as \"entries\" in the fetch response body.\n   *\n   * <p>Only defined for 200 responses.\n   */\n  config?: FirebaseRemoteConfigObject;\n\n  // Note: we're not extracting experiment metadata until\n  // ABT and Analytics have Web SDKs.\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const RC_COMPONENT_NAME = 'remote-config-exp';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\n\nexport const enum ErrorCode {\n  REGISTRATION_WINDOW = 'registration-window',\n  REGISTRATION_PROJECT_ID = 'registration-project-id',\n  REGISTRATION_API_KEY = 'registration-api-key',\n  REGISTRATION_APP_ID = 'registration-app-id',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_SET = 'storage-set',\n  STORAGE_DELETE = 'storage-delete',\n  FETCH_NETWORK = 'fetch-client-network',\n  FETCH_TIMEOUT = 'fetch-timeout',\n  FETCH_THROTTLE = 'fetch-throttle',\n  FETCH_PARSE = 'fetch-client-parse',\n  FETCH_STATUS = 'fetch-status'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.REGISTRATION_WINDOW]:\n    'Undefined window object. This SDK only supports usage in a browser environment.',\n  [ErrorCode.REGISTRATION_PROJECT_ID]:\n    'Undefined project identifier. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_API_KEY]:\n    'Undefined API key. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_APP_ID]:\n    'Undefined app identifier. Check Firebase app initialization.',\n  [ErrorCode.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_SET]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_NETWORK]:\n    'Fetch client failed to connect to a network. Check Internet connection.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_TIMEOUT]:\n    'The config fetch request timed out. ' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\n  [ErrorCode.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [ErrorCode.FETCH_PARSE]:\n    'Fetch client could not parse response.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_STATUS]:\n    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.'\n};\n\n// Note this is effectively a type system binding a code to params. This approach overlaps with the\n// role of TS interfaces, but works well for a few reasons:\n// 1) JS is unaware of TS interfaces, eg we can't test for interface implementation in JS\n// 2) callers should have access to a human-readable summary of the error and this interpolates\n//    params into an error message;\n// 3) callers should be able to programmatically access data associated with an error, which\n//    ErrorData provides.\ninterface ErrorParams {\n  [ErrorCode.STORAGE_OPEN]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_GET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_SET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_DELETE]: { originalErrorMessage: string | undefined };\n  [ErrorCode.FETCH_NETWORK]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [ErrorCode.FETCH_PARSE]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_STATUS]: { httpStatus: number };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'remoteconfig' /* service */,\n  'Remote Config' /* service name */,\n  ERROR_DESCRIPTION_MAP\n);\n\n// Note how this is like typeof/instanceof, but for ErrorCode.\nexport function hasErrorCode(e: Error, errorCode: ErrorCode): boolean {\n  return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ValueType, ValueSource } from '@firebase/remote-config-types';\n\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\nconst DEFAULT_VALUE_FOR_STRING = '';\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\n\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nexport class Value implements ValueType {\n  constructor(\n    private readonly _source: ValueSource,\n    private readonly _value: string = DEFAULT_VALUE_FOR_STRING\n  ) {}\n\n  asString(): string {\n    return this._value;\n  }\n\n  asBoolean(): boolean {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  }\n\n  asNumber(): number {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    let num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  }\n\n  getSource(): ValueSource {\n    return this._source;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider } from '@firebase/app-exp';\nimport { FirebaseApp } from '@firebase/app-types-exp';\nimport {\n  LogLevel as RemoteConfigLogLevel,\n  RemoteConfig,\n  Value as ValueType\n} from '@firebase/remote-config-types-exp';\nimport { RemoteConfigAbortSignal } from './client/remote_config_fetch_client';\nimport { RC_COMPONENT_NAME } from './constants';\nimport { ErrorCode, hasErrorCode } from './errors';\nimport { RemoteConfig as RemoteConfigImpl } from './remote_config';\nimport { Value } from './value';\nimport { LogLevel as FirebaseLogLevel } from '@firebase/logger';\n\n/**\n *\n * @param app - the firebase app instance\n * @returns a remote config instance\n *\n * @public\n */\nexport function getRemoteConfig(app: FirebaseApp): RemoteConfig {\n  const rcProvider = _getProvider(app, RC_COMPONENT_NAME);\n  return rcProvider.getImmediate();\n}\n\n/**\n * Makes the last fetched config available to the getters.\n * @param remoteConfig - the remote config instance\n * @returns A promise which resolves to true if the current call activated the fetched configs.\n * If the fetched configs were already activated, the promise will resolve to false.\n *\n * @public\n */\nexport async function activate(remoteConfig: RemoteConfig): Promise<boolean> {\n  const rc = remoteConfig as RemoteConfigImpl;\n  const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\n    rc._storage.getLastSuccessfulFetchResponse(),\n    rc._storage.getActiveConfigEtag()\n  ]);\n  if (\n    !lastSuccessfulFetchResponse ||\n    !lastSuccessfulFetchResponse.config ||\n    !lastSuccessfulFetchResponse.eTag ||\n    lastSuccessfulFetchResponse.eTag === activeConfigEtag\n  ) {\n    // Either there is no successful fetched config, or is the same as current active\n    // config.\n    return false;\n  }\n  await Promise.all([\n    rc._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\n    rc._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\n  ]);\n  return true;\n}\n\n/**\n * Ensures the last activated config are available to the getters.\n * @param remoteConfig - the remote config instance\n *\n * @returns A promise that resolves when the last activated config is available to the getters\n * @public\n */\nexport function ensureInitialized(remoteConfig: RemoteConfig): Promise<void> {\n  const rc = remoteConfig as RemoteConfigImpl;\n  if (!rc._initializePromise) {\n    rc._initializePromise = rc._storageCache.loadFromStorage().then(() => {\n      rc._isInitializationComplete = true;\n    });\n  }\n  return rc._initializePromise;\n}\n\n/**\n * Fetches and caches configuration from the Remote Config service.\n * @param remoteConfig - the remote config instance\n * @public\n */\nexport async function fetchConfig(remoteConfig: RemoteConfig): Promise<void> {\n  const rc = remoteConfig as RemoteConfigImpl;\n  // Aborts the request after the given timeout, causing the fetch call to\n  // reject with an AbortError.\n  //\n  // <p>Aborting after the request completes is a no-op, so we don't need a\n  // corresponding clearTimeout.\n  //\n  // Locating abort logic here because:\n  // * it uses a developer setting (timeout)\n  // * it applies to all retries (like curl's max-time arg)\n  // * it is consistent with the Fetch API's signal input\n  const abortSignal = new RemoteConfigAbortSignal();\n\n  setTimeout(async () => {\n    // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n    abortSignal.abort();\n  }, rc.settings.fetchTimeoutMillis);\n\n  // Catches *all* errors thrown by client so status can be set consistently.\n  try {\n    await rc._client.fetch({\n      cacheMaxAgeMillis: rc.settings.minimumFetchIntervalMillis,\n      signal: abortSignal\n    });\n\n    await rc._storageCache.setLastFetchStatus('success');\n  } catch (e) {\n    const lastFetchStatus = hasErrorCode(e, ErrorCode.FETCH_THROTTLE)\n      ? 'throttle'\n      : 'failure';\n    await rc._storageCache.setLastFetchStatus(lastFetchStatus);\n    throw e;\n  }\n}\n\n/**\n * Gets all config.\n *\n * @param remoteConfig - the remote config instance\n * @returns all config\n *\n * @public\n */\nexport function getAll(remoteConfig: RemoteConfig): Record<string, ValueType> {\n  const rc = remoteConfig as RemoteConfigImpl;\n  return getAllKeys(\n    rc._storageCache.getActiveConfig(),\n    rc.defaultConfig\n  ).reduce((allConfigs, key) => {\n    allConfigs[key] = getValue(remoteConfig, key);\n    return allConfigs;\n  }, {} as Record<string, ValueType>);\n}\n\n/**\n * Gets the value for the given key as a boolean.\n *\n * Convenience method for calling <code>remoteConfig.getValue(key).asBoolean()</code>.\n *\n * @param remoteConfig - the remote config instance\n * @param key - the name of the parameter\n *\n * @returns the value for the given key as a boolean\n * @public\n */\nexport function getBoolean(remoteConfig: RemoteConfig, key: string): boolean {\n  return getValue(remoteConfig, key).asBoolean();\n}\n\n/**\n * Gets the value for the given key as a number.\n *\n * Convenience method for calling <code>remoteConfig.getValue(key).asNumber()</code>.\n *\n * @param remoteConfig - the remote config instance\n * @param key - the name of the parameter\n *\n * @returns the value for the given key as a number\n *\n * @public\n */\nexport function getNumber(remoteConfig: RemoteConfig, key: string): number {\n  return getValue(remoteConfig, key).asNumber();\n}\n\n/**\n * Gets the value for the given key as a String.\n * Convenience method for calling <code>remoteConfig.getValue(key).asString()</code>.\n *\n * @param remoteConfig - the remote config instance\n * @param key - the name of the parameter\n *\n * @returns the value for the given key as a String\n *\n * @public\n */\nexport function getString(remoteConfig: RemoteConfig, key: string): string {\n  return getValue(remoteConfig, key).asString();\n}\n\n/**\n * Gets the {@link @firebase/remote-config-types#Value} for the given key.\n *\n * @param remoteConfig - the remote config instance\n * @param key - the name of the parameter\n *\n * @returns the value for the given key\n *\n * @public\n */\nexport function getValue(remoteConfig: RemoteConfig, key: string): ValueType {\n  const rc = remoteConfig as RemoteConfigImpl;\n  if (!rc._isInitializationComplete) {\n    rc._logger.debug(\n      `A value was requested for key \"${key}\" before SDK initialization completed.` +\n        ' Await on ensureInitialized if the intent was to get a previously activated value.'\n    );\n  }\n  const activeConfig = rc._storageCache.getActiveConfig();\n  if (activeConfig && activeConfig[key] !== undefined) {\n    return new Value('remote', activeConfig[key]);\n  } else if (rc.defaultConfig && rc.defaultConfig[key] !== undefined) {\n    return new Value('default', String(rc.defaultConfig[key]));\n  }\n  rc._logger.debug(\n    `Returning static value for key \"${key}\".` +\n      ' Define a default or remote value if this is unintentional.'\n  );\n  return new Value('static');\n}\n\n/**\n * Defines the log level to use.\n *\n * @param remoteConfig - the remote config instance\n * @param logLevel - the log level to set\n *\n * @public\n */\nexport function setLogLevel(\n  remoteConfig: RemoteConfig,\n  logLevel: RemoteConfigLogLevel\n): void {\n  const rc = remoteConfig as RemoteConfigImpl;\n  switch (logLevel) {\n    case 'debug':\n      rc._logger.logLevel = FirebaseLogLevel.DEBUG;\n      break;\n    case 'silent':\n      rc._logger.logLevel = FirebaseLogLevel.SILENT;\n      break;\n    default:\n      rc._logger.logLevel = FirebaseLogLevel.ERROR;\n  }\n}\n\n/**\n * Dedupes and returns an array of all the keys of the received objects.\n */\nfunction getAllKeys(obj1: {} = {}, obj2: {} = {}): string[] {\n  return Object.keys({ ...obj1, ...obj2 });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageCache } from '../storage/storage_cache';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { Storage } from '../storage/storage';\nimport { Logger } from '@firebase/logger';\n\n/**\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\n *\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\n * Cache API doesn't support matching entries by time.\n */\nexport class CachingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage,\n    private readonly storageCache: StorageCache,\n    private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns true if the age of the cached fetched configs is less than or equal to\n   * {@link Settings#minimumFetchIntervalInSeconds}.\n   *\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\n   * native Fetch API.\n   *\n   * <p>Visible for testing.\n   */\n  isCachedDataFresh(\n    cacheMaxAgeMillis: number,\n    lastSuccessfulFetchTimestampMillis: number | undefined\n  ): boolean {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n\n    // Calculates age of cache entry.\n    const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n\n    const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n\n    this.logger.debug(\n      'Config fetch cache check.' +\n        ` Cache age millis: ${cacheAgeMillis}.` +\n        ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\n        ` Is cache hit: ${isCachedDataFresh}.`\n    );\n\n    return isCachedDataFresh;\n  }\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\n    const [\n      lastSuccessfulFetchTimestampMillis,\n      lastSuccessfulFetchResponse\n    ] = await Promise.all([\n      this.storage.getLastSuccessfulFetchTimestampMillis(),\n      this.storage.getLastSuccessfulFetchResponse()\n    ]);\n\n    // Exits early on cache hit.\n    if (\n      lastSuccessfulFetchResponse &&\n      this.isCachedDataFresh(\n        request.cacheMaxAgeMillis,\n        lastSuccessfulFetchTimestampMillis\n      )\n    ) {\n      return lastSuccessfulFetchResponse;\n    }\n\n    // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n    // that allows the caller to pass an ETag.\n    request.eTag =\n      lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n\n    // Falls back to service on cache miss.\n    const response = await this.client.fetch(request);\n\n    // Fetch throws for non-success responses, so success is guaranteed here.\n\n    const storageOperations = [\n      // Uses write-through cache for consistency with synchronous public API.\n      this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\n    ];\n\n    if (response.status === 200) {\n      // Caches response only if it has changed, ie non-304 responses.\n      storageOperations.push(\n        this.storage.setLastSuccessfulFetchResponse(response)\n      );\n    }\n\n    await Promise.all(storageOperations);\n\n    return response;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FirebaseRemoteConfigObject,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { getUserLanguage } from '../language';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-types-exp';\n\n/**\n * Defines request body parameters required to call the fetch API:\n * https://firebase.google.com/docs/reference/remote-config/rest\n *\n * <p>Not exported because this file encapsulates REST API specifics.\n *\n * <p>Not passing User Properties because Analytics' source of truth on Web is server-side.\n */\ninterface FetchRequestBody {\n  // Disables camelcase linting for request body params.\n  /* eslint-disable camelcase*/\n  sdk_version: string;\n  app_instance_id: string;\n  app_instance_id_token: string;\n  app_id: string;\n  language_code: string;\n  /* eslint-enable camelcase */\n}\n\n/**\n * Implements the Client abstraction for the Remote Config REST API.\n */\nexport class RestClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly firebaseInstallations: _FirebaseInstallationsInternal,\n    private readonly sdkVersion: string,\n    private readonly namespace: string,\n    private readonly projectId: string,\n    private readonly apiKey: string,\n    private readonly appId: string\n  ) {}\n\n  /**\n   * Fetches from the Remote Config REST API.\n   *\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\n   * connect to the network.\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\n   * fetch response.\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\n   */\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const [installationId, installationToken] = await Promise.all([\n      this.firebaseInstallations.getId(),\n      this.firebaseInstallations.getToken()\n    ]);\n\n    const urlBase =\n      window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\n      'https://firebaseremoteconfig.googleapis.com';\n\n    const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'Content-Encoding': 'gzip',\n      // Deviates from pure decorator by not passing max-age header since we don't currently have\n      // service behavior using that header.\n      'If-None-Match': request.eTag || '*'\n    };\n\n    const requestBody: FetchRequestBody = {\n      /* eslint-disable camelcase */\n      sdk_version: this.sdkVersion,\n      app_instance_id: installationId,\n      app_instance_id_token: installationToken,\n      app_id: this.appId,\n      language_code: getUserLanguage()\n      /* eslint-enable camelcase */\n    };\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(requestBody)\n    };\n\n    // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\n    const fetchPromise = fetch(url, options);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      // Maps async event listener to Promise API.\n      request.signal.addEventListener(() => {\n        // Emulates https://heycam.github.io/webidl/#aborterror\n        const error = new Error('The operation was aborted.');\n        error.name = 'AbortError';\n        reject(error);\n      });\n    });\n\n    let response;\n    try {\n      await Promise.race([fetchPromise, timeoutPromise]);\n      response = await fetchPromise;\n    } catch (originalError) {\n      let errorCode = ErrorCode.FETCH_NETWORK;\n      if (originalError.name === 'AbortError') {\n        errorCode = ErrorCode.FETCH_TIMEOUT;\n      }\n      throw ERROR_FACTORY.create(errorCode, {\n        originalErrorMessage: originalError.message\n      });\n    }\n\n    let status = response.status;\n\n    // Normalizes nullable header to optional.\n    const responseEtag = response.headers.get('ETag') || undefined;\n\n    let config: FirebaseRemoteConfigObject | undefined;\n    let state: string | undefined;\n\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    // Requesting application/json and checking for a 200 ensures there's JSON data.\n    if (response.status === 200) {\n      let responseBody;\n      try {\n        responseBody = await response.json();\n      } catch (originalError) {\n        throw ERROR_FACTORY.create(ErrorCode.FETCH_PARSE, {\n          originalErrorMessage: originalError.message\n        });\n      }\n      config = responseBody['entries'];\n      state = responseBody['state'];\n    }\n\n    // Normalizes based on legacy state.\n    if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n      status = 500;\n    } else if (state === 'NO_CHANGE') {\n      status = 304;\n    } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n      // These cases can be fixed remotely, so normalize to safe value.\n      config = {};\n    }\n\n    // Normalize to exception-based control flow for non-success cases.\n    // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n    // differentiating success states (200 from 304; the state body param is undefined in a\n    // standard 304).\n    if (status !== 304 && status !== 200) {\n      throw ERROR_FACTORY.create(ErrorCode.FETCH_STATUS, {\n        httpStatus: status\n      });\n    }\n\n    return { status, eTag: responseEtag, config };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attempts to get the most accurate browser language setting.\n *\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\n *\n * <p>Defers default language specification to server logic for consistency.\n *\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\n */\nexport function getUserLanguage(\n  navigatorLanguage: NavigatorLanguage = navigator\n): string {\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RemoteConfigAbortSignal,\n  RemoteConfigFetchClient,\n  FetchResponse,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ThrottleMetadata, Storage } from '../storage/storage';\nimport { ErrorCode, ERROR_FACTORY } from '../errors';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nexport function setAbortableTimeout(\n  signal: RemoteConfigAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(ErrorCode.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Decorates a Client with retry logic.\n *\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\n * responses (because the SDK has no use for error responses).\n */\nexport class RetryingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage\n  ) {}\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\n      backoffCount: 0,\n      throttleEndTimeMillis: Date.now()\n    };\n\n    return this.attemptFetch(request, throttleMetadata);\n  }\n\n  /**\n   * A recursive helper for attempting a fetch request repeatedly.\n   *\n   * @throws any non-retriable errors.\n   */\n  async attemptFetch(\n    request: FetchRequest,\n    { throttleEndTimeMillis, backoffCount }: ThrottleMetadata\n  ): Promise<FetchResponse> {\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    await setAbortableTimeout(request.signal, throttleEndTimeMillis);\n\n    try {\n      const response = await this.client.fetch(request);\n\n      // Note the SDK only clears throttle state if response is success or non-retriable.\n      await this.storage.deleteThrottleMetadata();\n\n      return response;\n    } catch (e) {\n      if (!isRetriableError(e)) {\n        throw e;\n      }\n\n      // Increments backoff state.\n      const throttleMetadata = {\n        throttleEndTimeMillis:\n          Date.now() + calculateBackoffMillis(backoffCount),\n        backoffCount: backoffCount + 1\n      };\n\n      // Persists state.\n      await this.storage.setThrottleMetadata(throttleMetadata);\n\n      return this.attemptFetch(request, throttleMetadata);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types-exp';\nimport {\n  RemoteConfig as RemoteConfigType,\n  FetchStatus,\n  Settings\n} from '@firebase/remote-config-types-exp';\nimport { StorageCache } from './storage/storage_cache';\nimport { RemoteConfigFetchClient } from './client/remote_config_fetch_client';\nimport { Storage } from './storage/storage';\nimport { Logger } from '@firebase/logger';\n\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\n *\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\n */\nexport class RemoteConfig implements RemoteConfigType {\n  /**\n   * Tracks completion of initialization promise.\n   * @internal\n   */\n  _isInitializationComplete = false;\n\n  /**\n   * De-duplicates initialization calls.\n   * @internal\n   */\n  _initializePromise?: Promise<void>;\n\n  settings: Settings = {\n    fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n    minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n  };\n\n  defaultConfig: { [key: string]: string | number | boolean } = {};\n\n  get fetchTimeMillis(): number {\n    return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n  }\n\n  get lastFetchStatus(): FetchStatus {\n    return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n  }\n\n  constructor(\n    // Required by FirebaseServiceFactory interface.\n    readonly app: FirebaseApp,\n    // JS doesn't support private yet\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n    // underscore prefix.\n    /**\n     * @internal\n     */\n    readonly _client: RemoteConfigFetchClient,\n    /**\n     * @internal\n     */\n    readonly _storageCache: StorageCache,\n    /**\n     * @internal\n     */\n    readonly _storage: Storage,\n    /**\n     * @internal\n     */\n    readonly _logger: Logger\n  ) {}\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport {\n  FetchResponse,\n  FirebaseRemoteConfigObject\n} from '../client/remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\n */\nfunction toFirebaseError(event: Event, errorCode: ErrorCode): FirebaseError {\n  const originalError = (event.target as IDBRequest).error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n\n/**\n * A general-purpose store keyed by app + namespace + {@link\n * ProjectNamespaceKeyFieldValue}.\n *\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\n *\n * <p>Visible for testing.\n */\nexport const APP_NAMESPACE_STORE = 'app_namespace_store';\n\nconst DB_NAME = 'firebase_remote_config';\nconst DB_VERSION = 1;\n\n/**\n * Encapsulates metadata concerning throttled fetch requests.\n */\nexport interface ThrottleMetadata {\n  // The number of times fetch has backed off. Used for resuming backoff after a timeout.\n  backoffCount: number;\n  // The Unix timestamp in milliseconds when callers can retry a request.\n  throttleEndTimeMillis: number;\n}\n\n/**\n * Provides type-safety for the \"key\" field used by {@link APP_NAMESPACE_STORE}.\n *\n * <p>This seems like a small price to avoid potentially subtle bugs caused by a typo.\n */\ntype ProjectNamespaceKeyFieldValue =\n  | 'active_config'\n  | 'active_config_etag'\n  | 'last_fetch_status'\n  | 'last_successful_fetch_timestamp_millis'\n  | 'last_successful_fetch_response'\n  | 'settings'\n  | 'throttle_metadata';\n\n// Visible for testing.\nexport function openDatabase(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = event => {\n      reject(toFirebaseError(event, ErrorCode.STORAGE_OPEN));\n    };\n    request.onsuccess = event => {\n      resolve((event.target as IDBOpenDBRequest).result);\n    };\n    request.onupgradeneeded = event => {\n      const db = (event.target as IDBOpenDBRequest).result;\n\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n\n/**\n * Abstracts data persistence.\n */\nexport class Storage {\n  /**\n   * @param appId enables storage segmentation by app (ID + name).\n   * @param appName enables storage segmentation by app (ID + name).\n   * @param namespace enables storage segmentation by namespace.\n   */\n  constructor(\n    private readonly appId: string,\n    private readonly appName: string,\n    private readonly namespace: string,\n    private readonly openDbPromise = openDatabase()\n  ) {}\n\n  getLastFetchStatus(): Promise<FetchStatus | undefined> {\n    return this.get<FetchStatus>('last_fetch_status');\n  }\n\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    return this.set<FetchStatus>('last_fetch_status', status);\n  }\n\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  getLastSuccessfulFetchTimestampMillis(): Promise<number | undefined> {\n    return this.get<number>('last_successful_fetch_timestamp_millis');\n  }\n\n  setLastSuccessfulFetchTimestampMillis(timestamp: number): Promise<void> {\n    return this.set<number>(\n      'last_successful_fetch_timestamp_millis',\n      timestamp\n    );\n  }\n\n  getLastSuccessfulFetchResponse(): Promise<FetchResponse | undefined> {\n    return this.get<FetchResponse>('last_successful_fetch_response');\n  }\n\n  setLastSuccessfulFetchResponse(response: FetchResponse): Promise<void> {\n    return this.set<FetchResponse>('last_successful_fetch_response', response);\n  }\n\n  getActiveConfig(): Promise<FirebaseRemoteConfigObject | undefined> {\n    return this.get<FirebaseRemoteConfigObject>('active_config');\n  }\n\n  setActiveConfig(config: FirebaseRemoteConfigObject): Promise<void> {\n    return this.set<FirebaseRemoteConfigObject>('active_config', config);\n  }\n\n  getActiveConfigEtag(): Promise<string | undefined> {\n    return this.get<string>('active_config_etag');\n  }\n\n  setActiveConfigEtag(etag: string): Promise<void> {\n    return this.set<string>('active_config_etag', etag);\n  }\n\n  getThrottleMetadata(): Promise<ThrottleMetadata | undefined> {\n    return this.get<ThrottleMetadata>('throttle_metadata');\n  }\n\n  setThrottleMetadata(metadata: ThrottleMetadata): Promise<void> {\n    return this.set<ThrottleMetadata>('throttle_metadata', metadata);\n  }\n\n  deleteThrottleMetadata(): Promise<void> {\n    return this.delete('throttle_metadata');\n  }\n\n  async get<T>(key: ProjectNamespaceKeyFieldValue): Promise<T | undefined> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.get(compositeKey);\n        request.onerror = event => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_GET));\n        };\n        request.onsuccess = event => {\n          const result = (event.target as IDBRequest).result;\n          if (result) {\n            resolve(result.value);\n          } else {\n            resolve(undefined);\n          }\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_GET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async set<T>(key: ProjectNamespaceKeyFieldValue, value: T): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.put({\n          compositeKey,\n          value\n        });\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_SET));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_SET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async delete(key: ProjectNamespaceKeyFieldValue): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.delete(compositeKey);\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_DELETE));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_DELETE, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  // Facilitates composite key functionality (which is unsupported in IE).\n  createCompositeKey(key: ProjectNamespaceKeyFieldValue): string {\n    return [this.appId, this.appName, this.namespace, key].join();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport { FirebaseRemoteConfigObject } from '../client/remote_config_fetch_client';\nimport { Storage } from './storage';\n\n/**\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\n */\nexport class StorageCache {\n  constructor(private readonly storage: Storage) {}\n\n  /**\n   * Memory caches.\n   */\n  private lastFetchStatus?: FetchStatus;\n  private lastSuccessfulFetchTimestampMillis?: number;\n  private activeConfig?: FirebaseRemoteConfigObject;\n\n  /**\n   * Memory-only getters\n   */\n  getLastFetchStatus(): FetchStatus | undefined {\n    return this.lastFetchStatus;\n  }\n\n  getLastSuccessfulFetchTimestampMillis(): number | undefined {\n    return this.lastSuccessfulFetchTimestampMillis;\n  }\n\n  getActiveConfig(): FirebaseRemoteConfigObject | undefined {\n    return this.activeConfig;\n  }\n\n  /**\n   * Read-ahead getter\n   */\n  async loadFromStorage(): Promise<void> {\n    const lastFetchStatusPromise = this.storage.getLastFetchStatus();\n    const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n    const activeConfigPromise = this.storage.getActiveConfig();\n\n    // Note:\n    // 1. we consistently check for undefined to avoid clobbering defined values\n    //   in memory\n    // 2. we defer awaiting to improve readability, as opposed to destructuring\n    //   a Promise.all result, for example\n\n    const lastFetchStatus = await lastFetchStatusPromise;\n    if (lastFetchStatus) {\n      this.lastFetchStatus = lastFetchStatus;\n    }\n\n    const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\n    if (lastSuccessfulFetchTimestampMillis) {\n      this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n    }\n\n    const activeConfig = await activeConfigPromise;\n    if (activeConfig) {\n      this.activeConfig = activeConfig;\n    }\n  }\n\n  /**\n   * Write-through setters\n   */\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  }\n\n  setLastSuccessfulFetchTimestampMillis(\n    timestampMillis: number\n  ): Promise<void> {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  }\n\n  setActiveConfig(activeConfig: FirebaseRemoteConfigObject): Promise<void> {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app-exp';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\nimport { RemoteConfig } from '@firebase/remote-config-types-exp';\nimport { name as packageName, version } from '../package.json';\nimport { ensureInitialized } from './api';\nimport { CachingClient } from './client/caching_client';\nimport { RestClient } from './client/rest_client';\nimport { RetryingClient } from './client/retrying_client';\nimport { RC_COMPONENT_NAME } from './constants';\nimport { ErrorCode, ERROR_FACTORY } from './errors';\nimport { RemoteConfig as RemoteConfigImpl } from './remote_config';\nimport { Storage } from './storage/storage';\nimport { StorageCache } from './storage/storage_cache';\n// This needs to be in the same file that calls `getProvider()` on the component\n// or it will get tree-shaken out.\nimport '@firebase/installations-exp';\n\nexport function registerRemoteConfig(): void {\n  _registerComponent(\n    new Component(\n      RC_COMPONENT_NAME,\n      remoteConfigFactory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(packageName, version);\n\n  function remoteConfigFactory(\n    container: ComponentContainer,\n    namespace?: string\n  ): RemoteConfig {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app-exp').getImmediate();\n    // The following call will always succeed because rc has `import '@firebase/installations'`\n    const installations = container\n      .getProvider('installations-exp-internal')\n      .getImmediate();\n\n    // Guards against the SDK being used in non-browser environments.\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_WINDOW);\n    }\n\n    // Normalizes optional inputs.\n    const { projectId, apiKey, appId } = app.options;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_PROJECT_ID);\n    }\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_API_KEY);\n    }\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_APP_ID);\n    }\n    namespace = namespace || 'firebase';\n\n    const storage = new Storage(appId, app.name, namespace);\n    const storageCache = new StorageCache(storage);\n\n    const logger = new Logger(packageName);\n\n    // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n    logger.logLevel = FirebaseLogLevel.ERROR;\n\n    const restClient = new RestClient(\n      installations,\n      // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n      SDK_VERSION,\n      namespace,\n      projectId,\n      apiKey,\n      appId\n    );\n    const retryingClient = new RetryingClient(restClient, storage);\n    const cachingClient = new CachingClient(\n      retryingClient,\n      storage,\n      storageCache,\n      logger\n    );\n\n    const remoteConfigInstance = new RemoteConfigImpl(\n      app,\n      cachingClient,\n      storageCache,\n      storage,\n      logger\n    );\n\n    // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ensureInitialized(remoteConfigInstance);\n\n    return remoteConfigInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RemoteConfig } from '@firebase/remote-config-types-exp';\nimport { activate, fetchConfig } from './api';\n\n// This API is put in a separate file, so we can stub fetchConfig and activate in tests.\n// It's not possible to stub standalone functions from the same module.\n/**\n *\n * Performs fetch and activate operations, as a convenience.\n *\n * @param remoteConfig - the remote config instance\n *\n * @returns A promise which resolves to true if the current call activated the fetched configs.\n * If the fetched configs were already activated, the promise will resolve to false.\n *\n * @public\n */\nexport async function fetchAndActivate(\n  remoteConfig: RemoteConfig\n): Promise<boolean> {\n  await fetchConfig(remoteConfig);\n  return activate(remoteConfig);\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","_","label","sent","trys","ops","g","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__spread","ar","concat","r","error","__read","ERROR_NAME","Error","create","__","constructor","code","message","customData","_super","_this","FirebaseError","captureStackTrace","ErrorFactory","_i","data","fullCode","service","template","errors","replace","PATTERN","key","String","fullMessage","serviceName","LogLevel","Component","mode","instantiationMode","multipleInstances","props","serviceProps","name","instanceFactory","type","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","ConsoleMethod","console","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","_a","Logger","_logLevel","val","_logHandler","_userLogHandler","promisifyRequest","request","onsuccess","onerror","promisifyRequestCall","obj","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","get","set","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","slice","callback","nativeObject","getAll","query","count","items","iterateCursor","undefined","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","version","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","includes","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","retryIfServerError","fn","sleep","ms","setTimeout","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","array","btoa","fromCharCode","bufferToBase64UrlSafe","substr","test","getKey","appName","appId","fidChangeCallbacks","Map","fidChanged","callFidChangeCallbacks","channel","broadcastChannel","BroadcastChannel","onmessage","getBroadcastChannel","postMessage","size","close","broadcastFidChange","callbacks","callbacks_1","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeCallback","upgradeDB","indexedDB","onupgradeneeded","event","tx","oldValue","put","remove","delete","update","updateFn","newValue","getInstallationEntry","oldEntry","installationEntry","clearTimedOutRequest","registrationStatus","entryWithPromise","registrationPromise","updateInstallationRequest","entry","_b","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallationRequest","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","generateAuthTokenRequest","platformLoggerProvider","getGenerateAuthTokenEndpoint","platformLogger","getImmediate","optional","getPlatformInfoString","installation","refreshAuthToken","installations","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenExpired","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","updatedInstallationEntry","fetchAuthTokenFromServer","getToken","completeInstallationRegistration","installationsImpl","getMissingValueError","valueName","publicFactory","container","app","getProvider","options","configKeys_1","keyName","extractAppConfig","_getProvider","_delete","internalFactory","INSTALLATIONS_NAME","getId","catch","_registerComponent","RemoteConfigAbortSignal","listener","listeners","RC_COMPONENT_NAME","BOOLEAN_TRUTHY_VALUES","Value","_value","_source","indexOf","toLowerCase","num","isNaN","activate","remoteConfig","rc","all","_storage","getLastSuccessfulFetchResponse","getActiveConfigEtag","lastSuccessfulFetchResponse","activeConfigEtag","config","eTag","_storageCache","setActiveConfig","setActiveConfigEtag","ensureInitialized","_initializePromise","loadFromStorage","_isInitializationComplete","fetchConfig","abortSignal","abort","settings","fetchTimeoutMillis","_client","cacheMaxAgeMillis","minimumFetchIntervalMillis","signal","setLastFetchStatus","errorCode","lastFetchStatus","getValue","_logger","activeConfig","getActiveConfig","defaultConfig","CachingClient","lastSuccessfulFetchTimestampMillis","logger","cacheAgeMillis","isCachedDataFresh","storage","getLastSuccessfulFetchTimestampMillis","client","storageOperations","storageCache","setLastSuccessfulFetchTimestampMillis","setLastSuccessfulFetchResponse","RestClient","firebaseInstallations","installationId","installationToken","urlBase","window","FIREBASE_REMOTE_CONFIG_URL_BASE","url","namespace","Content-Encoding","If-None-Match","requestBody","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","navigatorLanguage","languages","language","fetchPromise","timeoutPromise","_resolve","addEventListener","race","originalError_1","originalErrorMessage","responseEtag","responseBody","originalError_2","state","httpStatus","RetryingClient","getThrottleMetadata","throttleMetadata","backoffCount","throttleEndTimeMillis","attemptFetch","backoffMillis","Math","max","timeout","clearTimeout","deleteThrottleMetadata","isRetriableError","intervalMillis","backoffFactor","currBaseValue","pow","randomWait","round","random","min","setThrottleMetadata","RemoteConfig","getLastFetchStatus","toFirebaseError","originalError","target","APP_NAMESPACE_STORE","DB_NAME","DB_VERSION","Storage","timestamp","etag","metadata","openDbPromise","compositeKey","createCompositeKey","join","open","keyPath","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","packageName","FirebaseLogLevel","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance","RemoteConfigImpl","setMultipleInstances","registerVersion","obj1","obj2","keys","getAllKeys","reduce","allConfigs","asBoolean","asNumber","asString"],"mappings":"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"}